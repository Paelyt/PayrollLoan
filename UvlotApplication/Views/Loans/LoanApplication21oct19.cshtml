@{
    ViewBag.Title = "Sigin";
    Layout = "~/Views/Shared/_LoginLayout.cshtml";
}
@model UvlotApplication.Classes.TableObjects.LoanApplication

<link rel="stylesheet" href="//code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css">
<script src="//code.jquery.com/jquery-1.10.2.js"></script>
<script src="//code.jquery.com/ui/1.11.4/jquery-ui.js"></script> 
<script>
    $(document).ready(function () {
        $("#DOB").datepicker({
            changeMonth: true,
            changeYear: true,
            yearRange: "-80:+0",
            onSelect: function () {
                console.log('s');
            },
            onChangeMonthYear: function () {
                console.log('o');
            }
        });
    });
  //$(document).ready(function() {
  //    $("#DOB").datepicker();
  //    changeMonth: true,
  //    //dateFormat: "dd-mm-yy"
      
  //});
</script>  
    <div class="page-header01">
        <div class="container">
            <div class="row">
                <div class="col-md-12 text-center ">
                    <h2>Apply Now</h2>
                    <nav aria-label="breadcrumb">
                        <ol class="breadcrumb">
                            <li class="breadcrumb-item"><a href="/">Home</a></li>
                            <li class="breadcrumb-item active" aria-current="page">Apply Now</li>
                        </ol>
                    </nav>
                </div>
            </div>
        </div>
    </div>
    <!-- end of page header -->
    <section class="section-padding contact-us-padding form-padding">
        <div class="container">
            <div class="row justify-content-center">
                <div class="col-md-12 col-lg-10">
                    @using (Html.BeginForm("CreatePayrollLoan", "Loans", FormMethod.Post))
                    {
                        <form action="#" method="post">
                            
                            @if (TempData["Error"] != null)
                            {
                                <div id="Msgs" class="alert alert-danger">
                                    @TempData["Error"]
                                </div>
                            }

                            <div class="row list-input">
                                <div class="col-md-12 col-lg-12 formHeaderBg">
                                    <h3 class="formHeader">Personal Information </h3>
                                </div>



                                <div class="col-md-6 mr0">
                                    <div class="single-get-touch">
                                        @*<select id="Titles" name="Titles" data-live-search="true" required="required">
                                            <option value="" default selected data-tokens="Select State">SELECT TITLE</option>
                                            @foreach (var nTitle in ViewBag.nTitles)
                                            {
                                                <option id="Title" value="@nTitle.ID" data-tokens="@nTitle.Name">@nTitle.Name</option>
                                            }
                                        </select>*@
                                       @* @Html.DropDownList("Titles", new SelectList(ViewBag.nTitles, "ID", "Name"), new { value = Request["Titles"]  })*@
                                        @Html.DropDownListFor(model => model.Title_FK, (SelectList)ViewData["nTitles"], "Select Title" , new { @id= "Titles", @required = "required",name= "Titles" })
                                        
                                    </div>
                                </div>

                                <div class="col-md-6 right">
                                    <div class="single-get-touch">
                                        @*<select id="Marital" name="Marital" data-live-search="true" required="required">
                                            <option value="" default selected data-tokens="Select MeansOfID">Marital Status</option>
                                            @foreach (var nMarital in ViewBag.nMarital)
                                            {
                                                <option id="meansOfIDs" value="@nMarital.ID" data-tokens="@nMarital.Name">@nMarital.Name</option>
                                            }
                                        </select>*@
                                        @*@Html.DropDownList("Marital", new SelectList(ViewBag.nMarital, "ID", "Name"), new { })*@
                                        @Html.DropDownListFor(model => model.MaritalStatus_FK, (SelectList)ViewData["nMarital"], "Select Marital Status", new { @id = "Marital", @required = "required",@name= "Marital" })
                                    </div>
                                </div>

                                <div class="col-md-6 mr0">
                                    <div class="single-get-touch">
                                        @Html.TextBoxFor(model => model.Surname, new { placeholder = "LAST NAME*", required = "required" })
                                    </div>
                                </div>

                                <div class="col-md-6">
                                    <div class="single-get-touch">
                                        @Html.TextBoxFor(model => model.Firstname, new { placeholder = "FIRST NAME*", required = "required" })
                                    </div>
                                </div>

                                <div class="col-md-6 mr0">
                                    <div class="single-get-touch">
                                        @Html.TextBoxFor(model => model.DateOfBirth, new { placeholder = "DATE OF BIRTH*", id = "DOB", required = "required" ,@readonly = "true" })
                                    </div>
                                </div>


                                <div class="col-md-6">
                                    <div class="single-get-touch">
                                        @*<select name="selectGender" required>
                          <option value="" default selected >SELECT GENDER</option>
                                            <option value="1">Male</option>
                                            <option value="2">Female</option>
                                        </select>*@
                                        @Html.DropDownListFor(model => model.Gender_FK, (SelectList)ViewData["nGender"], "Select Gender", new { @id = "selectGender",@name= "selectGender" })
                                    </div>
                                </div>
                                <div class="col-md-6 mr0">
                                    <div class="single-get-touch">                                      
                                        @*<select id="meansOfID" name="meansOfID" data-live-search="true" required="required">
                                            <option value="" default selected data-tokens="Select MeansOfID">MEANS OF IDENTIFICATION</option>
                                            @foreach (var nMeansOfID in ViewBag.nMeansOfIDs)
                                            {
                                                <option id="meansOfIDs" value="@nMeansOfID.ID" data-tokens="@nMeansOfID.Name">@nMeansOfID.Name</option>
                                            }
                                        </select>*@
                                        @*@Html.DropDownList("meansOfID", new SelectList(ViewBag.meansOfID, "ID", "Name"), new { })*@
                                        @Html.DropDownListFor(model => model.MeansOfID_FK, (SelectList)ViewData["nMeansOfIDs"], "Select Mean Of Id", new { @id = "meansOfID", @required = "required",@name= "meansOfID" })
                                    </div>
                                </div>


                                <div class="col-md-6">
                                    <div class="single-get-touch">
                                        @*<input type="text" name="idNumber" placeholder="IDENTIFICATION NUMBER" required>*@
                                        @Html.TextBoxFor(model => model.IdentficationNumber, new { placeholder = "IDENTIFICATION NUMBER" })
                                    </div>
                                </div>


                                <div class="col-md-12 col-lg-12 formHeaderBg">
                                    <h3 class="formHeader">Contact Information </h3>
                                </div>
                                <div class="col-md-6 mr0">
                                    <div class="single-get-touch">

                                        @Html.TextBoxFor(model => model.EmailAddress, new { placeholder = "PERSONAL EMAIL", required = "required", @type = "email" })
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="single-get-touch">
                                        @Html.TextBoxFor(model => model.PhoneNumber, new { placeholder = "PHONE NUMBER", required = "required", maxlength = 11, onkeypress = "return isNumber(event);", ondrop = "return isNumber(event);", onpaste = "return isNumber(event);", autocomplete = "off" })
                                    </div>
                                </div>
                                <div class="col-md-6 mr0">
                                    <div class="single-get-touch">
                                        @Html.TextBoxFor(model => model.ContactAddress, new { placeholder = "HOME ADDRESS", required = "required" })
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="single-get-touch">
                                        @Html.TextBoxFor(model => model.Landmark, new { placeholder = "LANDMARK*", required = "required" })
                                    </div>
                                </div>
                                <div class="col-md-6 mr0">
                                    <div class="single-get-touch">
                                        @*@Html.DropDownListFor(model => model.State, ViewBag.state as List<SelectListItem>, new { style = "width: 200px;" })*@
                                        @*<select id="States" name="States" data-live-search="true" required="required">
                                            <option value="" default selected data-tokens="Select State">STATE OF RESIDENCE</option>
                                            @foreach (var nState in ViewBag.nStates)
                                            {
                                                <option id="States" value="@nState.ID" data-tokens="@nState.Name">@nState.Name</option>
                                            }
                                        </select>*@
                                        @*@Html.DropDownList("States", new SelectList(ViewBag.nStates, "ID", "Name"), new { })*@
                                        @Html.DropDownListFor(model => model.StateofResidence_FK, (SelectList)ViewData["nStates"], "Select Residence Type", new { @id= "States",@name= "States" })
                                        
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="single-get-touch">
                                      
                                        <select id="lgaList" name="lgaList" class="sikSelect" data-live-search="true" required="required" onchange="getText();">
                                            <option data-tokens="SELECT LGA"></option>
                                        </select>
                                    </div>
                                </div>
                                <div class="col-md-6 mr0">
                                    <div class="single-get-touch">
                                        
                                        @Html.TextBoxFor(model => model.ClosestBusStop, new { placeholder = "CLOSEST BUS STOP*", required = "required" })
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="single-get-touch">                                       
                                        @*<select id="AccomodationTypes" name="AccomodationTypes" data-live-search="true" required="required">
                                            <option data-tokens="Select AccomodationTypes">ACCOMMODATION TYPE</option>
                                            @foreach (var nAccomodationType in ViewBag.nAccomodationTypes)
                                            {
                                                <option id="AccomodationTypes" value="@nAccomodationType.ID" data-tokens="@nAccomodationType.Name">@nAccomodationType.Name</option>
                                            }
                                        </select>*@
                                        @*@Html.DropDownList("AccomodationTypes", new SelectList(ViewBag.nAccomodationTypes, "ID", "Name"), new { })*@
                                        @Html.DropDownListFor(model => model.AccomodationType_FK, (SelectList)ViewData["nAccomodationTypes"], "Select Accomodation Type", new { @id = "AccomodationTypes", @required = "required",@name= "AccomodationTypes" })
                                    </div>
                                </div>

                                <div class="col-md-12 col-lg-12 formHeaderBg">
                                    <h3 class="formHeader">Employment Information </h3>
                                </div>
                                <div class="col-md-6 mr0">
                                    <div class="single-get-touch">
                                        @Html.TextBoxFor(model => model.Organization, new { placeholder = "EMPLOYER", required = "required" })
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="single-get-touch">
                                        @Html.TextBoxFor(model => model.ApplicantID, new { placeholder = "EMPLOYEE ID", required = "required" })
                                    </div>
                                </div>
                                <div class="col-md-6 mr0">
                                    <div class="single-get-touch">
                                        @*<input type="text" name="occupation" placeholder="OCCUPATION" required>*@  
                                        @Html.TextBoxFor(model => model.Occupation, new { placeholder = "OCCUPATION", required = "required" })                                   
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="single-get-touch">
                                        @*<input type="text" name="designation" placeholder="DESIGNATION" required>*@
                                        @Html.TextBoxFor(model => model.Designation, new { placeholder = "DESIGNATION", required = "required" })
                                        
                                    </div>
                                </div>
                                <div class="col-md-6 mr0">
                                    <div class="single-get-touch">
                                        @*<input type="text" name="department" placeholder="DEPARTMENT" required>*@
                                        @Html.TextBoxFor(model => model.Department, new { placeholder = "DEPARTMENT", required = "required" })
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="single-get-touch">
                                        @*<select name="employment_status" required>
                                            <option value="employmentStatus">EMPLOYMENT STATUS</option>
                                            <option value="1">Permanent</option>
                                            <option value="2">Contract</option>
                                        </select>*@
                                        @Html.DropDownListFor(model => model.Contract, (SelectList)ViewData["nemploymentStatus"], "Select Employment Type", new { @id = "employment_status",@name= "employment_status" })
                                    </div>
                                </div>
                                <div class="col-md-6 mr0">
                                    <div class="single-get-touch">
                                        @*<input type="text" name="netMonthlyIncome" id="MonthlyIcome" placeholder="NET MONTHLY INCOME" required="true" onkeydown="return isNumber(event);" onkeypress="return isNumber(event);" ondrop="return isNumber(event);" onpaste="return isNumber(event);" autocomplete = "off"  onfocusout="convertAmount()">*@
                                        @Html.TextBoxFor(model => model.SalaryAmount, new { placeholder = "NET MONTHLY INCOME*", id = "MonthlyIcome", required = "required", onkeypress = "return isNumber(event);", ondrop = "return isNumber(event);", onpaste = "return isNumber(event);", autocomplete = "off", onfocusout = "convertAmount()" })
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="single-get-touch">
                                        @*<input type="text" name="Los" placeholder="LENGTH OF SERVICE" required>*@
                                        @Html.TextBoxFor(model => model.LOS, new { placeholder = "LENGTH OF SERVICE" , required = "required" })
                                    </div>
                                </div>
                                <div class="col-md-6 mr0">
                                    <div class="single-get-touch">
                                        @*<input type="text" name="officeEmail" placeholder="OFFICIAL EMAIL" required>*@
                                        @Html.TextBoxFor(model => model.OfficialEmail, new { placeholder = "OFFICIAL EMAIL*", required = "required" })
                                        
                                    </div>
                                </div>

                                <div class="col-md-12 col-lg-12 formHeaderBg">
                          <h3 class="formHeader">Next Of Kin Information </h3>
                                </div>
                                <div class="col-md-6 mr0">
                                    <div class="single-get-touch">
                                        @Html.TextBoxFor(model => model.NOK_FullName, new { placeholder = "FULL NAME*", required = "required" })
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="single-get-touch">
                                        @Html.TextBoxFor(model => model.NOK_Relationship, new { placeholder = "RELATIONSHIP*", required = "required" })
                                    </div>
                                </div>
                                <div class="col-md-6 mr0">
                                    <div class="single-get-touch">
                                        @Html.TextBoxFor(model => model.NOK_HomeAddress, new { placeholder = "HOME ADDRESS*", required = "required" })
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="single-get-touch">
                                        @Html.TextBoxFor(model => model.NOK_EmailAddress, new { placeholder = "EMAIL ADDRESS*", required = "required", @type = "email" })
                                    </div>
                                </div>
                                <div class="col-md-6 mr0">
                                    <div class="single-get-touch">
                                        @Html.TextBoxFor(model => model.NOK_PhoneNumber, new { placeholder = "PHONE NUMBER*" ,required = "required", maxlength = 11,  onkeypress = "return isNumber(event);", ondrop = "return isNumber(event);", onpaste = "return isNumber(event);", autocomplete = "off" })

                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="single-get-touch">
                                        @*<input type="text" name="nokHomeAddress" placeholder="HOME ADDRESS" required>*@
                                    </div>
                                </div>

                                <div class="col-md-12 col-lg-12 formHeaderBg">
                                    <h3 class="formHeader">Credit Facility Request</h3>
                                </div>
                                <div class="col-md-6 mr0">
                                    <div class="single-get-touch">
                                        @Html.TextBoxFor(model => model.LoanAmount, new { placeholder = "LOAN AMOUNT*", id="LoansAmount", required = "required", onkeypress = "return isNumber(event);", ondrop = "return isNumber(event);", onpaste = "return isNumber(event);", autocomplete = "off", onfocusout = "ConvertLoanAmount()" })



                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="single-get-touch">
                                        @*<input type="text" name="loanTenure" placeholder="LOAN TENURE (1-12Months)" required>*@
                                    </div>
                                </div>
                                <div class="col-md-6 mr0">
                                    <div class="single-get-touch">
                                        @*@Html.TextBoxFor(model => model.LoanTenure, new { placeholder = "LOAN TENURE (1-12Months)*", required = "required" })*@
                                        @*<select name="LoanTenure" required>
                                            <option value="" default selected >Loan Tenure</option>
                                            <option value="1">1</option>
                                            <option value="2">2</option>
                                            <option value="3">3</option>
                                            <option value="4">4</option>
                                            <option value="5">5</option>
                                            <option value="6">6</option>
                                            <option value="7">7</option>
                                            <option value="8">8</option>
                                            <option value="9">9</option>
                                            <option value="10">10</option>
                                            <option value="11">11</option>
                                            <option value="12">12</option>
                                        </select>*@
                                        @Html.DropDownListFor(model => model.LoanTenure, (SelectList)ViewData["nLoanTenure"], "Select Loan Tenure", new { @id = "LoanTenure", @required = "required", @name = "LoanTenure" })
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="single-get-touch">
                                        @*<select id="RepmtMethod" name="RepmtMethod" data-live-search="true" required="required">
                                            <option value="" default selected data-tokens="Select Bank">REPAYMENT METHOD</option>
                                            @foreach (var nRepmtMethod in ViewBag.nRepmtMethods)
                                            {
                                                <option id="RepmtMethod" value="@nRepmtMethod.ID" data-tokens="@nRepmtMethod.Name">@nRepmtMethod.Name</option>
                                            }
                                        </select>*@
                                        @*@Html.DropDownList("RepmtMethod", new SelectList(ViewBag.nRepmtMethods, "ID", "Name"), new { })*@
                                        @Html.DropDownListFor(model => model.RepaymentMethod_FK, (SelectList)ViewData["nRepmtMethods"], "Select Repayment Method ", new { @id = "RepmtMethod", @required = "required", @name = "RepmtMethod" })
                                    </div>
                                </div>

                                <div class="col-md-12">
                                    <div class="single-get-check">
                                        Any Existing Loan
                                        <label class="radiobox">
                                            Yes
                                            <input type="radio" name="ExtLoan" value="Yes" required>
                                            <span class="checkmark"></span>
                                        </label>
                                        <label class="radiobox">
                                            No
                                            <input type="radio" name="ExtLoan" value="No" required>
                                            <span class="checkmark"></span>
                                        </label>
                                    </div>
                                </div>
                                
                                    <div class="col-md-6 mr0" id="ExistingLoan0">
                                        <div class="single-get-touch">
                                            @Html.TextBoxFor(model => model.ExistingLoan, new { placeholder = "OUTSTANDING AMOUNT*", onkeypress = "return isNumber(event);", ondrop = "return isNumber(event);", onpaste = "return isNumber(event);", autocomplete = "off" })
                                        </div>
                                    </div>
                                    <div class="col-md-6" id="ExistingLoan1">
                                        <div class="single-get-touch">
                                            @Html.TextBoxFor(model => model.ExistingLoan_NoOfMonthsLeft, new { placeholder = "HOW MANY MONTH(S) LEFT*" , onkeypress = "return isNumber(event);", ondrop = "return isNumber(event);", onpaste = "return isNumber(event);", autocomplete = "off"})
                                        </div>
                                    </div>
                                
                                <div class="col-md-12 col-lg-12 formHeaderBg">
                                    <h3 class="formHeader">Bank Information </h3>
                                </div>
                                <div class="col-md-6 mr0">
                                    <div class="single-get-touch">
                                        @*<select id="Bank" name="Bank" data-live-search="true" required="required">
                                            <option value="" default selected data-tokens="Select Bank">SELECT BANK</option>
                                            @foreach (var nBank in ViewBag.nBanks)
                                            {
                                                <option id="nBanks" value="@nBank.Code" data-tokens="@nBank.Name">@nBank.Name</option>
                                            }
                                        </select>*@
                                        @*@Html.DropDownList("Bank", new SelectList(ViewBag.nBanks, "ID", "Name"), new { })*@
                                        @Html.DropDownListFor(model => model.BankCode, (SelectList)ViewData["nBanks"], "Select Bank", new { @id = "Bank", @required = "required",@name= "Bank" })
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="single-get-touch">
                                        @Html.TextBoxFor(model => model.AccountNumber, new { placeholder = "ACCOUNT NUMBER*", maxlength = 10, required = "required", onkeypress = "return isNumber(event);", ondrop = "return isNumber(event);", onpaste = "return isNumber(event);", autocomplete = "off" })
                                    </div>
                                </div>
                                <div class="col-md-6 mr0">
                                    <div class="single-get-touch">
                                        @Html.TextBoxFor(model => model.AccountName, new { placeholder = "ACCOUNT NAME*", required = "required" })
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="single-get-touch">
                                        @Html.TextBoxFor(model => model.BVN, new { placeholder = "BANK VERIFICATION NUMBER (BVN)*", required = "required", onkeypress = "return isNumber(event);", ondrop = "return isNumber(event);", onpaste = "return isNumber(event);", autocomplete = "off" })
                                    </div>
                                </div>
                                <div class="col-md-12">
                                    <div class="single-get-check">
                                       
                                        <label class="checkbox">
                                            
                                            <input type="checkbox" checked="checked" name="Terms" required>
                                           
                                           Accept Terms & Condition
                                        </label>
                                      
                                    </div>
                                </div>
                                <div class="col-md-12">
                                    <div class="single-get-touch">
                                        <a href="#"> <button type="submit" name="submit" class="btn btn-default btn-sm2 btnAction">Apply Now</button></a>

                                    </div>
                                </div>



                            </div>
                        </form>
                    }
                </div>
            </div>
        </div>
    </section>
    <!-- start footer area -->
    
    
    <!-- end of footer area -->
    <script src=@Url.Content("/asset/js/jquery-3.3.1.min.js")></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-easing/1.4.1/jquery.easing.min.js"></script>
    <script src=@Url.Content("/asset/js/jquery-ui.js")></script>
    <script src=@Url.Content("/asset/js/popper.min.js")></script>
    <script src=@Url.Content("/asset/js/bootstrap.min.js")></script>
    <script src=@Url.Content("/asset/js/jquery.nice-select.js")></script>
    <script src=@Url.Content("/asset/js/menumaker.js")></script>
    <script src=@Url.Content("/asset/js/owl.carousel.min.js")></script>
    <script src=@Url.Content("/asset/js/slider.js")></script>
    <script src=@Url.Content("/asset/js/active.js")></script>
    <script src=@Url.Content("/asset/js/jquery-2.2.3.min.js")></script>
    <script type='text/javascript' src=@Url.Content("/asset/js/jquery-2.2.3.min.js")></script>
    <script src=@Url.Content("/Scripts/jquery-1.10.2.min.js")></script>
    

    <script type="text/javascript">



    $(document).ready(function () {

        $("#States").change(function () {
            $("#lgaList").empty();
            $.ajax({
                type: 'POST',
                url: '@Url.Action("getLGAsByStateID","Loans")',
                dataType: 'json',
                data: { id: $("#States").val() },
                success: function (lga) {

                    $.each(lga, function (i, lga) {
                        $("#lgaList").append('<option value="'
                                                   + lga.Value + '">'
                                             + lga.Text + '</option>');
                    });
                },
                error: function (ex) {
                    alert('Failed.' + ex);
                }
            });
            return false;
        })
    });
    </script>   

<script>
    $("#ExistingLoan0").hide();
    $("#ExistingLoan1").hide();
  $("input[name='ExtLoan']").on("change", function () {
      if ($(this).val() == "Yes") {
          $("#ExistingLoan0").show();
          $("#ExistingLoan1").show();

      }
      else if ($(this).val() == "No")
      {
          $("#ExistingLoan0").hide();
          $("#ExistingLoan1").hide();
      }
  });
</script>
<script type="text/javascript">
       function isNumber(evt) {
            evt = (evt) ? evt : window.event;
            var charCode = (evt.which) ? evt.which : evt.keyCode;
            if (charCode > 31 && (charCode < 48 || charCode > 57)) {
                return false;
            }
            return true;
        }

</script>

<script type="text/javascript">
    
        function convertAmount() {
            //alert(num);
            var x = document.getElementById("MonthlyIcome").value;
            //alert(x);
            //if (isNaN(x)) {
            //    return alert('Invalid Monthly Income');
            //}
             x = parseFloat(x).toFixed(2).split('')
            //alert(x);
            let ii = x.length - 3
            while ((ii -= 3) > 0) {
                x.splice(ii, 0, ',')
            }
           
            x.value = x.join('');
           
            document.getElementById("MonthlyIcome").value = x.value;
          
        }
    
        function ConvertLoanAmount() {
            
            var x = document.getElementById("LoansAmount").value;
            //if (isNaN(x)) {
            //   return alert('Invalid Loan Amount');
            //}
            x = parseFloat(x).toFixed(2).split('')
           
            let ii = x.length - 3
            while ((ii -= 3) > 0) {
                x.splice(ii, 0, ',')
            }

            x.value = x.join('');

            document.getElementById("LoansAmount").value = x.value;

        }
    
</script>
