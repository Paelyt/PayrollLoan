
@{
    Layout = null;
    ViewBag.Title = "Sigin";
   // Layout = "~/Views/Shared/_LoginLayout.cshtml";
}

<!DOCTYPE html>

<html>
<head>
    <script src="https://cdn.jsdelivr.net/npm/signature_pad@2.3.2/dist/signature_pad.min.js"></script>
    <script src=@Url.Content("/userStyles/asset/js/jquery-3.3.1.min.js")></script>
    <meta name="viewport" content="width=device-width" />
    <title>TestSignature</title>
    <style>
  .wrapper 
  {
  position: relative;
  width: 400px;
  height: 200px;
  -moz-user-select: none;
  -webkit-user-select: none;
  -ms-user-select: none;
  user-select: none;
 }

.signature-pad 
{
  position: absolute;
  left: 0;
  top: 0;
  width:400px;
  height:200px;
  background-color: white;
}

    </style>
    
</head>
<body>
    
        <div class="wrapper">
            <canvas id="signature-pad" class="signature-pad" width="400" height="200">

            </canvas>
        </div>

        <button id="save-png">Save as PNG</button>
        <button id="save-jpeg">Save as JPEG</button>
        <button id="save-svg">Save as SVG</button>
        <button id="undo">Undo</button>
        <button id="clear">Clear</button>
    
    
</body>

</html>
<script type="text/javascript">

    var canvas = document.getElementById('signature-pad');

    // Adjust canvas coordinate space taking into account pixel ratio,
    // to make it look crisp on mobile devices.
    // This also causes canvas to be cleared.
    function resizeCanvas()
    {
        // When zoomed out to less than 100%, for some very strange reason,
        // some browsers report devicePixelRatio as less than 1
        // and only part of the canvas is cleared then.
        var ratio = Math.max(window.devicePixelRatio || 1, 1);
        //alert(ratio);
        //alert(canvas.offsetWidth);
        //offsetWidth
        canvas.width = canvas.offsetWidth * ratio;
        canvas.height = canvas.offsetHeight * ratio;
        canvas.getContext("2d").scale(ratio, ratio);
    }

    window.onresize = resizeCanvas;
    resizeCanvas();

    //var signaturePad = new SignaturePad(canvas,
    //{
    //    backgroundColor: 'rgb(255, 255, 255)' // necessary for saving image as JPEG; can be removed is only saving as PNG or SVG
    //});

    var signaturePad = new SignaturePad(document.getElementById('signature-pad'), {
        backgroundColor: 'rgba(255, 255, 255, 1)',
        penColor: 'rgb(0, 0, 0)'
    });

    document.getElementById('save-png').addEventListener('click', function () {
        if (signaturePad.isEmpty()) {
            return alert("Please provide a signature first.");
        }

        var data = signaturePad.toDataURL('image/png');
        SaveSignature(data);
        console.log(data);
        window.open(data);

      

    });

    document.getElementById('save-jpeg').addEventListener('click', function () {
        if (signaturePad.isEmpty()) {
            return alert("Please provide a signature first.");
        }

        var data = signaturePad.toDataURL('image/jpeg');
        console.log(data);
        window.open(data);
    });

    document.getElementById('save-svg').addEventListener('click', function () {
        if (signaturePad.isEmpty()) {
            return alert("Please provide a signature first.");
        }

        var data = signaturePad.toDataURL('image/svg+xml');
        console.log(data);
        console.log(atob(data.split(',')[1]));
        window.open(data);
    });

    document.getElementById('clear').addEventListener('click', function () {
        signaturePad.clear();
    });

    document.getElementById('undo').addEventListener('click', function () {
        var data = signaturePad.toData();
        if (data) {
            data.pop(); // remove the last dot or line
            signaturePad.fromData(data);
        }
    });



    function SaveSignature(data)
    {
            alert('test');
            alert(data);
            var ad = "moving";
            $.ajax({
            type: "POST",
            url: "/Loans/SaveSignature",
            data: "{signature:'" + data + "'}",
            //data: "{signature:'" + ad + "'}",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (response)
            {
                if (response.Success === "true")
                {
                }
                if (response == "true")
                {
                  //document.getElementById("btnSubmit").disabled = true;
                }
                else
                {

                }
            }
        });
    }
</script>
